<% if user_signed_in? %>

<!--    <form id="fileupload" class="new_micropost" name="the_post_form" method="post" enctype="multipart/form-data" action="/microposts" accept-charset="UTF-8">
      <textarea placeholder="schreib!"></textarea>
      <input type="file" id="files" name="photos[]" multiple>
      <div id="list"></div>
      <input id="submit" type="submit" name="commit">
    </form>-->

    <%= form_for(@micropost, html: { multipart: true, id: 'fileupload', name: 'the_post_form', enctype: 'multipart/form-data' }) do |f| %>
        <div class="form-group">
          <%= render 'shared/error_messages', object: f.object  %>
          <div class="field">
            <%= f.hidden_field :group_id, :value => @group.id unless @group.nil? %>

            <div style="">
              <%= f.text_area :content,
                              :rows => '2',
                              id: 'content_field',
                              #name: 'content',
                              onkeyup: 'check_the_post_form()',
                              placeholder: @placeholder,
                              class: 'form-control',
                              :data => {
                                      'min-rows' => 2
                                      #toggle: 'collapse',
                                      #target: '#collapseExample'
                              },
                              :aria => {
                                      #expanded: 'true'
                              }

              %>
              <!--<div class="collapse" id="collapseExample">-->

              <span id="content_count">0</span> chars<br><br>
              <!--<span class="picture"> -->
              <%= f.fields_for :photos do |p| %>
                  <span class="btn btn-xs btn-primary fileinput-button">
                      <span>Add images ...</span>
                        <div id="next_image">
                      <%#= p.file_field :picture, id: "files-0", multiple: true, name: 'photos[picture][]', onclick: 'theFileInput()' %>

                      <!-- accept: 'image/jpeg,image/gif,image/png', -->
                        </div>
                    </span>
              <% end %><br>
              <!--</span>-->
              <div id="list"></div>
              <div id="log"></div>
              <%= f.submit 'Post', id: 'submit', class: 'btn btn-success', data: { disable_with: 'Please wait ...' } %>
              <hr>
            </div>
          </div>
        </div>
        <div id="progress">
          <div class="bar" style="width: 0%;"></div>
        </div>

    <% end %>

    <style>
        .thumb {
            margin: 2px;
            max-height: 50px;
        }

        .fileinput-button {
            position: relative;
            overflow: hidden;
            display: inline-block;
        }
        .fileinput-button input {
            position: absolute;
            top: 0;
            right: 0;
            margin: 0;
            opacity: 0;
            -ms-filter: 'alpha(opacity=0)';
            font-size: 200px;
            direction: ltr;
            cursor: pointer;
        }
    </style>

    <script>

      var storedFiles = [];

        function handleFileSelect(evt) {

            var files = evt.target.files;

            var filesArr = Array.prototype.slice.call(files);
            filesArr.forEach(function(f) {
                storedFiles.push(f);
            });

            for (var i = 0, f; f = files[i]; i++) {
                if (!f.type.match('image.*')) {
                    continue;
                }
                var reader = new FileReader();
                reader.onload = (function(theFile) {
                    return function(e) {
                        var vorschau = document.createElement('img');
                        vorschau.className = 'thumb';
                        vorschau.src = e.target.result;
                        vorschau.title = theFile.name;
                        document.getElementById('list').insertBefore(vorschau, null);
//                        var name = theFile.name;
//                        var size = Math.round(parseInt(theFile.size)/1024);
//                        var span = document.createElement('span');
//                        span.innerHTML = [
//                            '<div>' +
//                            '<img class="thumb" src="', e.target.result, '"title="', escape(theFile.name), '"/>' +
//                            '<span>' + size + ' kb' + '<span>' + ' ' +
//                            '<span>' + name + '</span>' +
//                            '</div>'
//                        ].join('');
//                        document.getElementById('list').insertBefore(span, null);
                    }
                })(f);
                reader.readAsDataURL(f);
            }

            $('input[name="photos[picture][]"]').val(storedFiles);
            console.log(storedFiles)
        }

        var i = 0;
        function theFileInput() {

            if (i < 3) {
                i++;
                var x = document.createElement('input');
                x.setAttribute('type', 'file');
                x.setAttribute('name', 'photos[picture][]');
                x.setAttribute('multiple', 'multiple');
                x.setAttribute('id', 'files-' + i);
                x.setAttribute('accept', 'image/jpeg,image/gif,image/png');
                x.addEventListener('change', handleFileSelect, false);
                x.addEventListener('change', theFileInput, false);
                x.addEventListener('click', disappear, false);
                document.getElementById('next_image').appendChild(x);

                document.getElementById('log').innerHTML = i.toString();
            }

        }
        window.onload = theFileInput();

        function disappear() {
            console.log(i);
            document.getElementById('files-' + i).style.display = 'none';

        }

        function disappear_i(i) {
            console.log(i);
            document.getElementById('files-' + i).style.display = 'none';
        }

        function theLog() {
            document.getElementById('log').innerHTML = 'scheiße';
        }

        document.addEventListener('DOMContentLoaded', init, false);

        function init() {
            document.querySelector('#files-' + i).addEventListener('change', handleFileSelect, false);
        }

    </script>

    <script>

//        var queue = [];
//        function addFile(event) {
////            document.getElementById('next_image').innerHTML = 'scheißhausparole';
//            var files = event.target.files, i= 0, j=files.length, file, reader;
//
//            reader = new FileReader();
//            reader.onloadend = function(theFile) {
//                queue.push(reader.result);
//                //console.log(reader.result);
//            };
//
//            //document.getElementById('log').appendChild(queue);
//            console.log(queue);
//
//            for (i = 0; i<j; i += 1) {
//                file = files[i];
//                reader.readAsBinaryString(file);
//                console.log(reader.readAsBinaryString(file));
//            }
//        }
        //document.getElementById('files').addEventListener('change', addFile, false);
    </script>

    <script type="text/javascript">
        $('#micropost_picture').bind('change', function() {
            size_in_megabytes = this.files[0].size/1024/1024;
            if (size_in_megabytes > 5) {
                alert('it must be smaller than 5MB');
            }
        });

        $('#content_field').on('keyup', function(){
            length = $(this).val().length;
            $('#content_count').html(length);
        });

        $(function(){
            data = [];
            <% User.find_each do |user| %>
            data.push('<%= user.slug %>');
            <% end %>
            $('textarea').atwho({at:"@", 'data':data});
        });

        $(document).one('focus.textarea', '#content_field', function() {
            var savedValue = this.value;
            this.value = '';
            this.baseScrollHeight = this.scrollHeight;
            this.value = savedValue;
        }).on('input.textarea', '#content_field', function() {
            var minRows = this.getAttribute('data-min-rows')| 0, rows;
            this.rows = minRows;
            console.log(this.scrollHeight, this.baseScrollHeight);
            rows = Math.ceil((this.scrollHeight - this.baseScrollHeight) / 15);
            this.rows = minRows + rows;
        });

        function check_the_post_form() {
            //var f = document.forms["the_post_form"].elements;
            var f = document.getElementById('content_field').value;
            var cansubmit = true;
            var non_whitespace = /\S/;
            if (non_whitespace.test( f )) {
                cansubmit = true;
            } else {
                cansubmit = false;
            }
            document.getElementById("submit").disabled = !cansubmit;
        }

        window.onload = check_the_post_form();

    </script>

<% else %>
    <%= 'na geh' %>
<% end %>

